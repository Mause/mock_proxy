name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  clippy_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            components: clippy
            override: true
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

  build:
    runs-on: ubuntu-latest

    env:
      SCCACHE_DIR: ~/.sccache
      SCCACHE_CACHE_SIZE: 2G
      SCCACHE_LOG_LEVEL: debug
      RUSTC_WRAPPER: sccache
      # SCCACHE_RECACHE: 1 # Uncomment this to clear cache, then comment it back out

    steps:
    - uses: actions/checkout@v2
    - name: Install sccache (ubuntu-latest)
      env:
        LINK: https://github.com/mozilla/sccache/releases/download
        SCCACHE_VERSION: 0.2.15
      run: |
        SCCACHE_FILE=sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl
        mkdir -p $HOME/.local/bin
        curl -L "$LINK/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
        mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    - name: Cache cargo registry
      uses: actions/cache@v2
      continue-on-error: false
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    - name: Save sccache
      uses: actions/cache@v2
      continue-on-error: false
      with:
        path:  ~/.sccache
        key: ${{ runner.os }}-sccache-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-sccache-
    - run: |
        mkdir -p /home/runner/.config/sccache
        touch /home/runner/.config/sccache/config
    - run: sccache --start-server
      env:
        RUST_LOG: trace
    - uses: actions-rs/install@v0.1
      with:
        crate: cargo2junit
        version: 0.1.7
        use-tool-cache: true
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test -- -Z unstable-options --format json --report-time | cargo2junit > results.xml
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        files: results.xml
    - name: Print sccache stats
      run: sccache --show-stats
    - name: Stop sccache server
      run: sccache --stop-server || true
